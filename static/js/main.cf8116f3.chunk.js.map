{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","togglemode","for","Textform","useState","text","settext","div","style","color","heading","onChange","event","target","value","backgroundColor","rows","newtext","toUpperCase","showalert","toLowerCase","button","charAt","substr","split","length","Alert","alert","role","word","lower","slice","capatilise","msg","defaultProps","about","App","setmode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf8116f3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\"\r\nexport default function Navbar(props) {\r\n    return (\r\n         <nav className = {\r\n           `navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`\r\n         } >\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input class=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable dark mode </label>\r\n   </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes ={ title: PropTypes.string.isRequired,\r\n                     about :PropTypes.string,   }\r\nNavbar.defaultProps ={ title: \"Text Utils\",\r\n                     about :\"About Us\",   }","import React ,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n     const handleupercaseclick = () => {\r\n            //   console.log('button is clicked ');\r\n              let newtext =  text.toUpperCase();\r\n              settext(newtext);\r\n              props.showalert(\"Converted to Uppercase\",\"success\")\r\n     }\r\n     const handllowercaseclick = () => {\r\n            //   console.log('button is clicked ');\r\n              let newtext =  text.toLowerCase ();\r\n              settext(newtext);\r\n          props.showalert(\"Converted to Lowercase\",\"success\")\r\n     }\r\n     const handlecleartext =()=>{\r\n         let newtext = \"\";\r\n         settext(newtext);\r\n          props.showalert(\"The chat has been cleared successfully\",\"success\")\r\n     }\r\n     const titlecase = () => {\r\n            //  let text= /\\w\\S*/g;\r\n                let newtext =text.charAt(0).toUpperCase() + text.substr(1).toLowerCase();\r\n               settext(newtext)\r\n          props.showalert(\"Converted to Title case \",\"success\")\r\n     }\r\n\r\n     const handleonchange=(event)=>{\r\n    //    console.log(\"on change\");\r\n       settext(event.target.value)\r\n     }\r\n    const [text,settext]= useState('');\r\n    // text= \"gohoh\"// wrong way to change the heading of the text\r\n    // settext(\"new text \")// correct way to change the text\r\n    return (\r\n        <>\r\n        <div div className = \"container\"\r\n        style = {\r\n            {\r\n                color: props.mode === 'dark' ? 'white' : '#042743'\r\n            }\r\n        } >\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" onChange={handleonchange} style={{backgroundColor:props.mode==='dark'?'gray':'white',color: props.mode === 'dark' ? 'white' : '#042743'}} value={text} id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n         <button  className = \"btn btn-primary mx-2\"onClick = {handleupercaseclick} > Convert to upper case </button>\r\n         <button  className = \"btn btn-primary mx-2\"\r\n         onClick = { handllowercaseclick} > Convert to lower case </button>\r\n        <button button className = \"btn btn-primary mx-2\"onClick = {handlecleartext} > Cear the text </button>\r\n        <button button className = \"btn btn-primary mx-2\"onClick = {titlecase} >Title case </button>\r\n        </div>\r\n        <div div className = \"container my-3\"\r\n        style = {\r\n            {\r\n               color: props.mode === 'dark' ? 'white' : '#042743'\r\n            }\r\n        }>\r\n            <h2>Your text summary </h2>\r\n            <p>{text.split(\"\").length} words ,{text.length} character</p>\r\n            <p> {0.008 *text.split(\"\").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?'text':'Enter something in the box above to preview it '}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capatilise=(word)=>{\r\n       const lower =word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() +lower.slice(1);\r\n    }\r\n    return (\r\n                props.alert && <div>\r\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n               <strong>{capatilise(props.alert.type)}</strong> :{props.alert.msg}\r\n                 \r\n                </div>\r\n            </div> \r\n     \r\n    )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router,Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n  \n  const[mode,setmode]=useState('light')\n  const[alert,setalert]=useState(null)\n  const showalert=(message,type)=>{\n    setalert({\n       msg:message,\n       type:type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);  }\n  const togglemode=()=>{\n    if(mode==='light'){\n      setmode('dark')\n      document.body.style.backgroundColor='#042743'\n      showalert(\"Dark mode has been enabled\",\"success\")\n      document.title=\"TextUtils - Darkmode\"\n      // setInterval(() => {\n      //    document.title=\"TextUtils is amazing\"\n      // }, 2000);\n      // setInterval(() => {\n      //    document.title=\" insatll now TextUtils \"\n      // }, 1500);\n    }\n    else{\n      setmode('light')\n      document.body.style.backgroundColor = 'white'\n       showalert(\"Light mode has been enabled\",\"success\")\n         document.title=\"TextUtils - lightmode\"\n      }\n    }\n  \n  return (\n     <>\n {/* <Navbar title=\"Text Utils\" about=\"About Us\"/> */}\n {/* <Navbar/> */}\n     {/* <Router> */}\n     <Navbar title=\"Text Utils\" mode={mode} togglemode={togglemode}/>\n     <Alert alert={alert}/>\n     <div className=\"container my-3\">\n     {/* <Switch>\n       <Route exact path=\"/about\">\n         <About/>\n       </Route>\n       <Route exact path=\"/\"> */}\n        <Textform   showalert={showalert} heading=\"Enter the text to analyse below\" mode={mode}/>\n       {/* </Route>\n     </Switch> */}\n     </div>\n      {/* </Router> */}\n     </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}